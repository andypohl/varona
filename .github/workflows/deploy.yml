name: deploy

on:
  release:
    types: [published]

jobs:
  pypi-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: get pip cache dir
        id: pip-cache
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      - name: restore pip cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: pip-Linux-3.11-${{ hashFiles('.github/ci-requirements.txt') }}
          restore-keys: |
            pip-Linux-3.11-
      - name: set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - id: "auth"
        name: "Authenticate with Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS_JSON }}"
      - name: Extract tag name
        id: extract_tag
        # Note this removes the 'v' prefix from the tag name
        run: echo "PKG_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"
      - name: "Check if the package already exists"
        id: check_pkg_version_exists
        env:
          PKG_VERSION: ${{ env.PKG_VERSION }}
        run: |
          set +e
          gcloud artifacts versions describe $PKG_VERSION --package=varona --location=us-central1 --repository=pohlio-pypi
          status=$?
          set -e
          echo "::set-output name=status::$status"
      - name: "Delete existing package version"
        if: steps.check_pkg_version_exists.outputs.status == '0'
        env:
          PKG_VERSION: ${{ env.PKG_VERSION }}
        run: |
          gcloud artifacts versions delete $PKG_VERSION --quiet --package=varona --location=us-central1 --repository=pohlio-pypi
      - name: build and upload to GCP artfiacts registry
        env:
          PKG_VERSION: ${{ env.PKG_VERSION }}
        run: |
          python -m pip install -U pip
          python -m pip install -r .github/ci-requirements.txt
          python -m build
          twine upload --non-interactive --repository-url https://us-central1-python.pkg.dev/fiery-bit-428319-p1/pohlio-pypi/ dist/*

      - name: Set IMG_VERSION for Docker Deploy
        run: echo "${{ env.PKG_VERSION }}" > img_version.txt

      - name: Upload IMG_VERSION artifact
        uses: actions/upload-artifact@v4
        with:
          name: img_version
          path: img_version.txt

  docker-deploy:
    needs: pypi-deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: "auth"
        name: "Authenticate with Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS_JSON }}"

      - name: Download IMG_VERSION artifact
        uses: actions/download-artifact@v4
        with:
          name: img_version

      - name: Read IMG_VERSION
        id: read-img-version
        run: |
          echo "IMG_VERSION=$(cat img_version.txt)" >> $GITHUB_ENV

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"

      - name: "Check if the image already exists"
        id: check_img_version_exists
        run: |
          set +e
          gcloud artifacts docker images describe us-central1-docker.pkg.dev/fiery-bit-428319-p1/pohlio-docker/varona:${{ env.IMG_VERSION }}
          status=$?
          set -e
          echo "::set-output name=status::$status"

      - name: "Delete existing package version"
        if: steps.check_img_version_exists.outputs.status == '0'
        run: |
          gcloud artifacts docker images delete us-central1-docker.pkg.dev/fiery-bit-428319-p1/pohlio-docker/varona:${{ env.IMG_VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: GCP docker auth
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Docker build/push to GCP artfiacts registry
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: us-central1-docker.pkg.dev/fiery-bit-428319-p1/pohlio-docker/varona:${{ env.IMG_VERSION }},us-central1-docker.pkg.dev/fiery-bit-428319-p1/pohlio-docker/varona:latest
          platforms: linux/amd64,linux/arm64
